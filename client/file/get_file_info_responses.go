// Code generated by go-swagger; DO NOT EDIT.

package file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jkawamoto/go-pixeldrain/models"
)

// GetFileInfoReader is a Reader for the GetFileInfo structure.
type GetFileInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFileInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFileInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetFileInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetFileInfoOK creates a GetFileInfoOK with default headers values
func NewGetFileInfoOK() *GetFileInfoOK {
	return &GetFileInfoOK{}
}

/* GetFileInfoOK describes a response with status code 200, with default header values.

OK
*/
type GetFileInfoOK struct {
	Payload *models.FileInfo
}

func (o *GetFileInfoOK) Error() string {
	return fmt.Sprintf("[GET /file/{id}/info][%d] getFileInfoOK  %+v", 200, o.Payload)
}
func (o *GetFileInfoOK) GetPayload() *models.FileInfo {
	return o.Payload
}

func (o *GetFileInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FileInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileInfoDefault creates a GetFileInfoDefault with default headers values
func NewGetFileInfoDefault(code int) *GetFileInfoDefault {
	return &GetFileInfoDefault{
		_statusCode: code,
	}
}

/* GetFileInfoDefault describes a response with status code -1, with default header values.

Error Response
*/
type GetFileInfoDefault struct {
	_statusCode int

	Payload *models.StandardError
}

// Code gets the status code for the get file info default response
func (o *GetFileInfoDefault) Code() int {
	return o._statusCode
}

func (o *GetFileInfoDefault) Error() string {
	return fmt.Sprintf("[GET /file/{id}/info][%d] getFileInfo default  %+v", o._statusCode, o.Payload)
}
func (o *GetFileInfoDefault) GetPayload() *models.StandardError {
	return o.Payload
}

func (o *GetFileInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StandardError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

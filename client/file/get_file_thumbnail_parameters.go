// Code generated by go-swagger; DO NOT EDIT.

package file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetFileThumbnailParams creates a new GetFileThumbnailParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetFileThumbnailParams() *GetFileThumbnailParams {
	return &GetFileThumbnailParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetFileThumbnailParamsWithTimeout creates a new GetFileThumbnailParams object
// with the ability to set a timeout on a request.
func NewGetFileThumbnailParamsWithTimeout(timeout time.Duration) *GetFileThumbnailParams {
	return &GetFileThumbnailParams{
		timeout: timeout,
	}
}

// NewGetFileThumbnailParamsWithContext creates a new GetFileThumbnailParams object
// with the ability to set a context for a request.
func NewGetFileThumbnailParamsWithContext(ctx context.Context) *GetFileThumbnailParams {
	return &GetFileThumbnailParams{
		Context: ctx,
	}
}

// NewGetFileThumbnailParamsWithHTTPClient creates a new GetFileThumbnailParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetFileThumbnailParamsWithHTTPClient(client *http.Client) *GetFileThumbnailParams {
	return &GetFileThumbnailParams{
		HTTPClient: client,
	}
}

/*
GetFileThumbnailParams contains all the parameters to send to the API endpoint

	for the get file thumbnail operation.

	Typically these are written to a http.Request.
*/
type GetFileThumbnailParams struct {

	/* Height.

	   Height of the thumbnail image
	*/
	Height *int64

	/* ID.

	   ID of the file to get a thumbnail for
	*/
	ID string

	/* Width.

	   Width of the thumbnail image
	*/
	Width *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get file thumbnail params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetFileThumbnailParams) WithDefaults() *GetFileThumbnailParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get file thumbnail params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetFileThumbnailParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get file thumbnail params
func (o *GetFileThumbnailParams) WithTimeout(timeout time.Duration) *GetFileThumbnailParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get file thumbnail params
func (o *GetFileThumbnailParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get file thumbnail params
func (o *GetFileThumbnailParams) WithContext(ctx context.Context) *GetFileThumbnailParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get file thumbnail params
func (o *GetFileThumbnailParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get file thumbnail params
func (o *GetFileThumbnailParams) WithHTTPClient(client *http.Client) *GetFileThumbnailParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get file thumbnail params
func (o *GetFileThumbnailParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHeight adds the height to the get file thumbnail params
func (o *GetFileThumbnailParams) WithHeight(height *int64) *GetFileThumbnailParams {
	o.SetHeight(height)
	return o
}

// SetHeight adds the height to the get file thumbnail params
func (o *GetFileThumbnailParams) SetHeight(height *int64) {
	o.Height = height
}

// WithID adds the id to the get file thumbnail params
func (o *GetFileThumbnailParams) WithID(id string) *GetFileThumbnailParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get file thumbnail params
func (o *GetFileThumbnailParams) SetID(id string) {
	o.ID = id
}

// WithWidth adds the width to the get file thumbnail params
func (o *GetFileThumbnailParams) WithWidth(width *int64) *GetFileThumbnailParams {
	o.SetWidth(width)
	return o
}

// SetWidth adds the width to the get file thumbnail params
func (o *GetFileThumbnailParams) SetWidth(width *int64) {
	o.Width = width
}

// WriteToRequest writes these params to a swagger request
func (o *GetFileThumbnailParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Height != nil {

		// query param height
		var qrHeight int64

		if o.Height != nil {
			qrHeight = *o.Height
		}
		qHeight := swag.FormatInt64(qrHeight)
		if qHeight != "" {

			if err := r.SetQueryParam("height", qHeight); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Width != nil {

		// query param width
		var qrWidth int64

		if o.Width != nil {
			qrWidth = *o.Width
		}
		qWidth := swag.FormatInt64(qrWidth)
		if qWidth != "" {

			if err := r.SetQueryParam("width", qWidth); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

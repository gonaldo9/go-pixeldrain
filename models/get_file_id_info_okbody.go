// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GetFileIDInfoOKBody get file Id info o k body
// swagger:model getFileIdInfoOKBody
type GetFileIDInfoOKBody struct {

	// Timestamp of last viewed time
	DateLastView float64 `json:"date_last_view,omitempty"`

	// Timestamp of uploaded time
	DateUpload float64 `json:"date_upload,omitempty"`

	// Description of the file
	Description string `json:"description,omitempty"`

	// Name of the file
	FileName string `json:"file_name,omitempty"`

	// Size of the file in Bytes
	FileSize float64 `json:"file_size,omitempty"`

	// ID of the newly uploaded file
	ID string `json:"id,omitempty"`

	// Image associated with the mime type
	MimeImage string `json:"mime_image,omitempty"`

	// MIME type of the file
	MimeType string `json:"mime_type,omitempty"`

	// success
	Success bool `json:"success,omitempty"`

	// Link to a thumbnail of this file
	Thumbnail string `json:"thumbnail,omitempty"`

	// Amount of unique file views
	Views float64 `json:"views,omitempty"`
}

// Validate validates this get file Id info o k body
func (m *GetFileIDInfoOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *GetFileIDInfoOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetFileIDInfoOKBody) UnmarshalBinary(b []byte) error {
	var res GetFileIDInfoOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
